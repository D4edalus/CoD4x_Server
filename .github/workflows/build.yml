# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Set up dependencies
        run: |
          sudo apt install gcc-8 gcc-8-multilib g++-8 g++-multilib
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt-get install nasm:i386 paxctl:i386 libtommath-dev:i386
          
      - name: Show Build Env
        run: |
          gcc -v
          g++ -v
  
      # Runs a set of commands using the runners shell
      - name: Build
        run: |
          make
          
  build-win:
    runs-on: windows-latest

    steps:
      #- uses: actions/checkout@v2
      #- uses: msys2/setup-msys2@v2
      #  with:
      #    msystem: MINGW64
      #    update: true
      #    install: git mingw-w64-x86_64-toolchain
      #- name: Tools
      #  run: |
      #    choco install 7zip      
      #- name: Set up pexports
      #  shell: pwsh
      #  run: |
      #    curl -o "pexports.tar.xz" "https://github.com/callofduty4x/CoD4x_Server/raw/master/tools/pexports-0.47-mingw32-bin.tar.xz"
      #    7z x pexports.tar.xz | Out-Null
      #    7z x pexports.tar | Out-Null
          
      - name: Set up nasm
        run: |
          curl -o nasminst.exe https://www.nasm.us/pub/nasm/releasebuilds/2.14rc15/win32/nasm-2.14rc15-installer-x86.exe
          nasminst.exe /S
          Invoke-Expression "$env:LOCALAPPDATA\bin\NASM\nasm.exe -v"
      
          [Environment]::SetEnvironmentVariable("PATH",  "$env:LOCALAPPDATA\bin\NASM;$pwd\bin;C:\Program Files (x86)\nasm;$($env:path)")
          
      #- name: build
      #  run: |
      #    mingw32-make.exe
          
      
